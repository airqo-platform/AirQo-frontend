services:
  airqo-frontend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - BUILD_ENV=${BUILD_ENV:-production}
        - NODE_VERSION=${NODE_VERSION:-18-alpine}
    container_name: ${CONTAINER_NAME:-airqo-frontend-microservice}
    ports:
      - "${HOST_PORT:-3000}:${CONTAINER_PORT:-3000}"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - BACKEND_API_URL=${BACKEND_API_URL:-http://localhost:8000}
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-/api}
      - SERVICE_NAME=${SERVICE_NAME:-airqo-frontend}
      - SERVICE_VERSION=${SERVICE_VERSION:-1.0.0}
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:8000,http://nginx:80,*}
      # Additional environment variables from .env file
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - API_TIMEOUT=${API_TIMEOUT:-30000}
      - MAX_UPLOAD_SIZE=${MAX_UPLOAD_SIZE:-10485760}
    volumes:
      - ${LOG_PATH:-./logs}:/app/logs
      - ${ENV_FILE:-./.env}:/app/.env:ro
      # Optional: Add node_modules volume for better performance
      - node_modules:/app/node_modules
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${CONTAINER_PORT:-3000}/api/health"]
      interval: ${HEALTHCHECK_INTERVAL:-30s}
      timeout: ${HEALTHCHECK_TIMEOUT:-10s}
      retries: ${HEALTHCHECK_RETRIES:-3}
      start_period: ${HEALTHCHECK_START_PERIOD:-40s}
    restart: ${RESTART_POLICY:-unless-stopped}
    labels:
      - "service=${SERVICE_NAME:-airqo-frontend}"
      - "version=${SERVICE_VERSION:-1.0.0}"
      - "environment=${NODE_ENV:-production}"
      - "maintainer=${MAINTAINER:-team@airqo.net}"
      - "build.date=${BUILD_DATE:-}"
      - "build.commit=${GIT_COMMIT:-}"
    networks:
      - ${NETWORK_NAME:-airqo-network}
    # Logging configuration
    logging:
      driver: ${LOG_DRIVER:-json-file}
      options:
        max-size: ${LOG_MAX_SIZE:-10m}
        max-file: ${LOG_MAX_FILES:-3}
        labels: "service,version,environment"

networks:
  airqo-network:
    external: ${NETWORK_EXTERNAL:-true}
    name: ${NETWORK_NAME:-airqo-network}

# Named volumes for better performance
volumes:
  node_modules:
    driver: local