def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def appProperties = new Properties()
def appPropertiesFile = rootProject.file('key.properties')
if (appPropertiesFile.exists()) {
    appPropertiesFile.withReader('UTF-8') { reader ->
        appProperties.load(reader)
    }
}

def googleMapApiKey = appProperties.getProperty('google.maps.key')
if (googleMapApiKey == null) {
    throw new GradleException("Google Maps Key not found. Define google.maps.key in the key.properties file.")
}

def googleMapApiKeyDev = appProperties.getProperty('google.maps.key.dev')
if (googleMapApiKeyDev == null) {
    throw new GradleException("Google Maps Key not found. Define google.maps.key_dev in the key.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
// Signing
def releaseKeystoreProperties = new Properties()
def releaseKeystorePropertiesFile = rootProject.file('prod-key.properties')
if (releaseKeystorePropertiesFile.exists()) {
    releaseKeystoreProperties.load(new FileInputStream(releaseKeystorePropertiesFile))
}

def debugKeystoreProperties = new Properties()
def debugKeystorePropertiesFile = rootProject.file('key.properties')
if (debugKeystorePropertiesFile.exists()) {
    debugKeystoreProperties.load(new FileInputStream(debugKeystorePropertiesFile))
}

android {
    packagingOptions {
        jniLibs {
            useLegacyPackaging = true
        }
    }
    compileSdkVersion 34
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.airqo.app"
        minSdkVersion 21
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    flavorDimensions "airqo"
    productFlavors {
        airqo {
            dimension "airqo"
            manifestPlaceholders = [googleMapsKey:googleMapApiKey]
        }
 
        airqodev {
            dimension "airqo"
            applicationIdSuffix ".dev"
            manifestPlaceholders = [googleMapsKey:googleMapApiKeyDev]
        }
        
    }
// Add start
    signingConfigs {
        release {
            keyAlias releaseKeystoreProperties['keyAlias']
            keyPassword releaseKeystoreProperties['keyPassword']
            storeFile releaseKeystoreProperties['storeFile'] ? file(releaseKeystoreProperties['storeFile']) : null
            storePassword releaseKeystoreProperties['storePassword']
        }
        debug {
            keyAlias debugKeystoreProperties['keyAlias']
            keyPassword debugKeystoreProperties['keyPassword']
            storeFile debugKeystoreProperties['storeFile'] ? file(debugKeystoreProperties['storeFile']) : null
            storePassword debugKeystoreProperties['storePassword']
        }
        
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
        debug {
            debuggable true
            signingConfig signingConfigs.debug
        }
    }
    buildFeatures {
        viewBinding true
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.work:work-runtime-ktx:2.8.1"
    implementation "androidx.work:work-runtime:2.8.1"
}

