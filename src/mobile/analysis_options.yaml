#include: package:lints/recommended.yaml
include: package:flutter_lints/flutter.yaml

analyzer:
  exclude:
    - lib/firebase_options.dart
    - lib/firebase_options_dev.dart
    - lib/screens/dashboard/dashboard_view_legacy.dart
    - [build/**]
  language:
    strict-casts: true
    strict-raw-types: true

#linter:
#  rules:
#   - https://dart-lang.github.io/linter/lints/options/options.html

dart_code_metrics:
  metrics-exclude:
    - test/**
    - lib/firebase_options.dart
    - lib/firebase_options_dev.dart
    - [build/**]
  anti-patterns:
    - long-method
    - long-parameter-list
  metrics:
    cyclomatic-complexity: 20
    maximum-nesting-level: 5
    number-of-parameters: 4
    source-lines-of-code: 400
    lines-of-code: 100
    halstead-volume: 150
    number-of-methods: 10
    weight-of-class: 0.33
    maintainability-index: 50
    technical-debt:
      threshold: 1
      todo-cost: 161
      ignore-cost: 320
      ignore-for-file-cost: 396
      as-dynamic-cost: 322
      deprecated-annotations-cost: 37
      file-nullsafety-migration-cost: 41
      unit-type: "USD"
  rules:
    - newline-before-return
    - no-boolean-literal-compare
    - no-empty-block
    - prefer-trailing-comma
    - prefer-conditional-expressions
    - avoid-redundant-async
    - avoid-global-state
    - prefer-last
    - prefer-first
    - no-equal-then-else
    - avoid-cascade-after-if-null
    - avoid-collection-methods-with-unrelated-types
    - avoid-duplicate-exports
    - avoid-global-state
    - avoid-missing-enum-constant-in-map
    - avoid-throw-in-catch-block
    - avoid-top-level-members-in-tests
    - tag-name
    - prefer-trailing-comma
    - prefer-last
    - prefer-iterable-of
    - prefer-immediate-return
    - prefer-first
    - prefer-enums-by-name
    - prefer-correct-type-name
    - prefer-correct-test-file-name
    - prefer-conditional-expressions
    - prefer-commenting-analyzer-ignores
    - no-equal-then-else
    - no-empty-block
    - no-boolean-literal-compare
    - missing-test-assertion
    - double-literal-format
    - binary-expression-operand-order
    - avoid-unused-parameters
    - avoid-unrelated-type-assertions
    - avoid-unnecessary-type-casts
    - avoid-unnecessary-type-assertions
    - always-remove-listener
    - avoid-unnecessary-setstate
#    - avoid-nested-conditional-expressions
#    - avoid-border-all
#    - avoid-returning-widgets
#    - avoid-shrink-wrap-in-lists
#    - prefer-async-await
#    - avoid-passing-async-when-sync-expected
#    - avoid-non-null-assertion
#    - no-equal-arguments
#    - avoid-non-ascii-symbols
#    - prefer-correct-identifier-length
#    - member-ordering
#    - format-comment
#    - avoid-wrapping-in-padding
#    - check-for-equals-in-render-object-setters
#    - consistent-update-render-object
#    - prefer-const-border-radius
#    - prefer-correct-edge-insets-constructor
#    - prefer-extracting-callbacks
#    - prefer-single-widget-per-file
#    - prefer-intl-name
#    - provide-correct-intl-args
#    - no-magic-number
#    - prefer-match-file-name
#    - avoid-ignoring-return-values
#    - avoid-dynamic
#    - avoid-late-keyword
#    - prefer-moving-to-variable
#    - avoid-banned-imports
#    - ban-name
